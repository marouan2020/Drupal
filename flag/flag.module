<?php

/**
 * @file
 * The Flag module.
 */


/**
 * Implement hook_search_api_solr_search_results_alter()
 *
 * @param \Drupal\search_api\Query\ResultSetInterface $resultSet
 * @param \Drupal\search_api\Query\QueryInterface $query
 * @param \Solarium\QueryType\Select\Result\Result $results
 *
 * @return void
 */
function accor_filter_search_api_solr_search_results_alter(&$resultSet,&$query,&$results) {
  $request = \Drupal::request();
  if($request->isXmlHttpRequest() && $request->query->has('sort_by') && $request->query->get('sort_by')!="item_flagged_status"){
    return;
  }
  if (!empty($query->getResults()->getResultItems())) {
    $orderedListFlagged = _accor_filter_ordered_result_items($query->getResults()->getResultItems());
    $query->getResults()->setResultItems($orderedListFlagged);
  }
}

/**
 * Ordered list by Favoris field "item_flagged_status", make true in first
 *
 * @param  $resultItems
 *
 * @return array
 */
function _accor_filter_ordered_result_items(array $resultItems=[]){
  $currentUser     = \Drupal::currentUser();
  $itemsFlagged    = [];
  foreach ($resultItems as $indexId => $resultItem) {
    $flaggedUser = $resultItem->getField('item_flagged_users')->getValues();
    $isFlagged = $resultItem->getField('item_flagged_status')->getValues()[0];
    if ($isFlagged && in_array($currentUser->id(), $flaggedUser)) {
      $itemsFlagged[$indexId] = $resultItem;
      unset($resultItems[$indexId]);
    }
  }
  return array_merge($itemsFlagged, $resultItems);
}

